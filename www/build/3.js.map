{"version":3,"sources":["../../src/validators/email-validator.ts","../../src/pages/login/login.ts","../../src/pages/login/login.module.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import {FormControl} from \"@angular/forms\";\n\nexport class EmailValidator {\n\n  public static isValid(control: FormControl): any {\n\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(control.value);\n\n    if (re) {\n      return null;\n    }\n    return { \"invalidEmail\": true };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email-validator.ts","import { Component, OnInit } from \"@angular/core\";\nimport { IonicPage, NavController, AlertController, MenuController } from \"ionic-angular\";\nimport { FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Storage } from \"@ionic/storage\";\nimport { EmailValidator } from \"../../validators/email-validator\";\nimport { SplashScreen } from \"@ionic-native/splash-screen\";\nimport { Keyboard } from \"@ionic-native/keyboard\";\nimport { IUser, IFbToken } from \"../../interfaces\";\nimport { AuthProvider } from \"../../providers\";\nimport { StoreServices } from \"../../store/services\";\n\n@IonicPage({\n  name: \"LoginPage\"\n})\n@Component({\n  selector: \"page-login\",\n  templateUrl: \"login.html\",\n})\nexport class LoginPage {\n  public _loginForm: FormGroup;\n  private _user: IUser = {\n    email: null,\n    password: null,\n    uid: null\n  };\n  private _isNewUser = false;\n\n  constructor(\n    private _storeServices: StoreServices,\n    private _auth: AuthProvider,\n    public navCtrl: NavController,\n    private _alertCtrl: AlertController,\n    private _formBuilder: FormBuilder,\n    private _storage: Storage,\n    private _splashScreen: SplashScreen,\n    private _keyboard: Keyboard,\n    private _menuCtrl: MenuController\n  ) {\n    this._loginForm = _formBuilder.group({\n      email: [\"\", Validators.compose([Validators.required, EmailValidator.isValid])],\n      password: [\"\", Validators.compose([Validators.required, Validators.minLength(6)])]\n    });\n\n  }\n\n  ngOnInit() {\n    this._loginReturningUser();\n  }\n\n  ionViewWillEnter() {\n    this._menuCtrl.swipeEnable(false);\n  }\n\n  private _loginReturningUser(): void {\n    this._storage.get(\"userInfo\")\n      .then((userInfo: IFbToken) => {\n        if (!userInfo || !userInfo.providerId) {\n          throw new Error(\"User is not available in local storage.\");\n        }\n\n        return this._auth.loginUserFromStorage(userInfo);\n      })\n      .then(userData => {\n        if (!userData || !userData.email || !userData.uid) {\n          throw new Error(\"userData is not valid.\");\n        }\n\n        const user: IUser = this._createUser(userData);\n        this.navCtrl.push(\"HomePage\");\n\n        // Update the store with current user.\n        this._storeServices.addUser(user);\n\n        this._splashScreen.hide();\n      })\n      .catch(error => {\n        console.log(error);\n\n        this._splashScreen.hide();\n      });\n  }\n\n  private _onLoginOptionClick() {\n    this._isNewUser = false;\n  }\n\n  private _onSignUpOptionClick() {\n    this._isNewUser = true;\n  }\n\n  private _onLoginClick(user: IUser): void {\n    user.email = this._loginForm.value.email.toLowerCase().trim();\n    user.password =  this._loginForm.value.password;\n\n    if (this._loginForm.dirty) {\n      this._loginForm.controls[\"email\"].markAsTouched();\n      this._loginForm.controls[\"password\"].markAsTouched();\n      if (!this._loginForm.valid) {\n        this._showError();\n        return;\n      }\n      if (this._isNewUser) {\n          this.navCtrl.push(\"SignUpPage\");\n          return;\n      }\n\n      this._auth.loginWithEmail(user)\n        .then(userData => {\n          const user: IUser = this._createUser(userData);\n\n          this._loginForm.reset();\n          this._loginForm.controls[\"email\"].clearValidators();\n          this._loginForm.controls[\"password\"].clearValidators();\n\n          this._storeServices.addUser(user);\n\n          this.navCtrl.push(\"HomePage\");\n        });\n\n    }\n  }\n\n  private _onFacebookClick(): void {\n    this._auth.loginWithFacebook()\n      .then(userData => {\n        const user: IUser = this._createUser(userData);\n\n        this._storeServices.addUser(user);\n\n        this.navCtrl.push(\"HomePage\");\n      })\n      .catch(error => {\n        console.log(\"Facebook login failed: \", error);\n      });\n  }\n\n  private _onGoogleClick(): void {\n    this._auth.loginWithGoogle()\n      .then(userData => {\n        const user: IUser = this._createUser(userData);\n\n        this._storeServices.addUser(user);\n\n        this.navCtrl.push(\"HomePage\");\n      })\n      .catch(error => {\n        console.log(\"Google login failed:\", error);\n      });\n  }\n\n  private _onResetPasswordClick(): void {\n    this.navCtrl.push(\"ResetPasswordPage\");\n  }\n\n  private _createUser(user: IUser): IUser {\n    return {\n      email: user.email,\n      uid: user.uid,\n      password: null,\n      orgPath: null\n    };\n  }\n\n  private _showError() {\n    let message: string;\n    let buttons: any[];\n\n    if (!this._loginForm.controls[\"email\"].valid && !this._loginForm.controls[\"password\"].valid) {\n      message = `Please enter a valid email address.\\n\n        Password must be at least 6 characters.`;\n      buttons = [{text: \"Try again\", role: \"cancel\"}];\n    } else if (!this._loginForm.controls[\"email\"].valid) {\n      message = \"Please enter a valid email address.\";\n      buttons = [{text: \"Try again\", role: \"cancel\"}];\n    } else if (!this._loginForm.controls[\"password\"].valid) {\n      message = \"Password must be at least 6 characters.\";\n      buttons = [{text: \"Try again\", role: \"cancel\"}];\n    }\n\n    this._alertCtrl.create({\n      title: \"Error\",\n      message,\n      buttons\n    })\n    .present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { NgModule } from \"@angular/core\";\nimport { IonicPageModule } from \"ionic-angular\";\nimport { LoginPage } from \"./login\";\n\n@NgModule({\n  declarations: [\n    LoginPage\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage)\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts"],"sourceRoot":""}